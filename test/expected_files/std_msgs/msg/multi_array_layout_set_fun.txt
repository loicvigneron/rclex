  unsigned int dim_length;
  if (!enif_get_list_length(env, tuple[0], &dim_length))
    return enif_make_badarg(env);

  std_msgs__msg__MultiArrayDimension__Sequence *dim = std_msgs__msg__MultiArrayDimension__Sequence__create(dim_length);
  if (dim == NULL) return raise(env, __FILE__, __LINE__);
  message_p->dim = *dim;

  unsigned int dim_i;
  ERL_NIF_TERM dim_left, dim_head, dim_tail;
  for (dim_i = 0, dim_left = tuple[0]; dim_i < dim_length; ++dim_i, dim_left = dim_tail)
  {
    if (!enif_get_list_cell(env, dim_left, &dim_head, &dim_tail))
      return enif_make_badarg(env);

    int dim_i_arity;
    const ERL_NIF_TERM *dim_i_tuple;
    if (!enif_get_tuple(env, dim_head, &dim_i_arity, &dim_i_tuple))
      return enif_make_badarg(env);

    ErlNifBinary dim_i_label_binary;
    if (!enif_inspect_binary(env, dim_i_tuple[0], &dim_i_label_binary))
      return enif_make_badarg(env);

    if (!rosidl_runtime_c__String__assignn(&(message_p->dim.data[dim_i].label), (const char *)dim_i_label_binary.data, dim_i_label_binary.size))
      return raise(env, __FILE__, __LINE__);

    unsigned int dim_i_size;
    if (!enif_get_uint(env, dim_i_tuple[1], &dim_i_size))
      return enif_make_badarg(env);
    message_p->dim.data[dim_i].size = dim_i_size;

    unsigned int dim_i_stride;
    if (!enif_get_uint(env, dim_i_tuple[2], &dim_i_stride))
      return enif_make_badarg(env);
    message_p->dim.data[dim_i].stride = dim_i_stride;
  }

  unsigned int data_offset;
  if (!enif_get_uint(env, tuple[1], &data_offset))
    return enif_make_badarg(env);
  message_p->data_offset = data_offset;
