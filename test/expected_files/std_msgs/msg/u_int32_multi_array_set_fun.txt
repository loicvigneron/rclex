  int layout_arity;
  const ERL_NIF_TERM *layout_tuple;
  if (!enif_get_tuple(env, tuple[0], &layout_arity, &layout_tuple))
    return enif_make_badarg(env);

  unsigned int layout_dim_length;
  if (!enif_get_list_length(env, layout_tuple[0], &layout_dim_length))
    return enif_make_badarg(env);

  std_msgs__msg__MultiArrayDimension__Sequence *layout_dim = std_msgs__msg__MultiArrayDimension__Sequence__create(layout_dim_length);
  if (layout_dim == NULL) return raise(env, __FILE__, __LINE__);
  message_p->layout.dim = *layout_dim;

  unsigned int layout_dim_i;
  ERL_NIF_TERM layout_dim_left, layout_dim_head, layout_dim_tail;
  for (layout_dim_i = 0, layout_dim_left = layout_tuple[0]; layout_dim_i < layout_dim_length; ++layout_dim_i, layout_dim_left = layout_dim_tail)
  {
    if (!enif_get_list_cell(env, layout_dim_left, &layout_dim_head, &layout_dim_tail))
      return enif_make_badarg(env);

    int layout_dim_i_arity;
    const ERL_NIF_TERM *layout_dim_i_tuple;
    if (!enif_get_tuple(env, layout_dim_head, &layout_dim_i_arity, &layout_dim_i_tuple))
      return enif_make_badarg(env);

    ErlNifBinary layout_dim_i_label_binary;
    if (!enif_inspect_binary(env, layout_dim_i_tuple[0], &layout_dim_i_label_binary))
      return enif_make_badarg(env);

    if (!rosidl_runtime_c__String__assignn(&(message_p->layout.dim.data[layout_dim_i].label), (const char *)layout_dim_i_label_binary.data, layout_dim_i_label_binary.size))
      return raise(env, __FILE__, __LINE__);

    unsigned int layout_dim_i_size;
    if (!enif_get_uint(env, layout_dim_i_tuple[1], &layout_dim_i_size))
      return enif_make_badarg(env);
    message_p->layout.dim.data[layout_dim_i].size = layout_dim_i_size;

    unsigned int layout_dim_i_stride;
    if (!enif_get_uint(env, layout_dim_i_tuple[2], &layout_dim_i_stride))
      return enif_make_badarg(env);
    message_p->layout.dim.data[layout_dim_i].stride = layout_dim_i_stride;
  }

  unsigned int layout_data_offset;
  if (!enif_get_uint(env, layout_tuple[1], &layout_data_offset))
    return enif_make_badarg(env);
  message_p->layout.data_offset = layout_data_offset;

  unsigned int data_length;
  if (!enif_get_list_length(env, tuple[1], &data_length))
    return enif_make_badarg(env);

  rosidl_runtime_c__uint32__Sequence data;
  if(!rosidl_runtime_c__uint32__Sequence__init(&data, data_length))
    return enif_make_badarg(env);
  message_p->data = data;

  unsigned int data_i;
  ERL_NIF_TERM data_left, data_head, data_tail;
  for (data_i = 0, data_left = tuple[1]; data_i < data_length; ++data_i, data_left = data_tail)
  {
    if (!enif_get_list_cell(env, data_left, &data_head, &data_tail))
      return enif_make_badarg(env);

    unsigned int data_uint32;
    if (!enif_get_uint(env, data_head, &data_uint32))
      return enif_make_badarg(env);
    message_p->data.data[data_i] = data_uint32;
  }
